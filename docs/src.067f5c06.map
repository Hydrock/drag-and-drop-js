{"version":3,"sources":["../index.js","index.js"],"names":["dragAndDrop","moveElement","moveHandler","layerX","layerY","startDrag","type","e","style","position","draggable","document","addEventListener","setWindowPosition","parseInt","touches","clientX","target","parentNode","offsetLeft","clientY","offsetTop","stopDrag","removeEventListener","buttons","left","top","ondragstart","sectionElement","querySelector","headerElement","sectionElement2"],"mappings":";AA6EC,aA7Ec,SAASA,EAAYC,EAAaC,GACzCC,IAAAA,EAAS,EAAGC,EAAS,EAUhBC,SAAAA,EAAWC,EAAMC,EAAGN,GACzBA,EAAYO,MAAMC,SAAW,WAG7BR,EAAYS,WAAY,EAGX,UAATJ,GAEAH,EAASI,EAAEJ,OACXC,EAASG,EAAEH,OACXO,SAASC,iBAAiB,YAAaC,IACvB,UAATP,IACPH,EAASW,SAAUP,EAAEQ,QAAQ,GAAGC,QAAUT,EAAEU,OAAOC,WAAWC,WAAa,IAC3Ef,EAASU,SAAUP,EAAEQ,QAAQ,GAAGK,QAAUb,EAAEU,OAAOC,WAAWG,UAAY,IAC1EV,SAASC,iBAAiB,YAAaC,IAItCS,SAAAA,EAAUrB,GAEfA,EAAYS,WAAY,EACxBC,SAASY,oBAAoB,YAAaV,GAC1CF,SAASY,oBAAoB,YAAaV,GAGrCA,SAAAA,EAAkBN,GAClBN,EAAYS,YAEF,cAAXH,EAAED,KAGgB,IAAdC,EAAEiB,UAMFvB,EAAYO,MAAMiB,KAAQlB,EAAES,QAAUb,EAAU,KAChDF,EAAYO,MAAMkB,IAAOnB,EAAEa,QAAUhB,EAAU,MAEjC,cAAXG,EAAED,OACTL,EAAYO,MAAMiB,KACdX,SAAUP,EAAEQ,QAAQ,GAAGC,QAAUb,EAAS,IAAM,KACpDF,EAAYO,MAAMkB,IACdZ,SAAUP,EAAEQ,QAAQ,GAAGK,QAAUhB,EAAS,IAAM,OArDvDF,IACDA,EAAcD,GAGlBA,EAAY0B,YAAc,WACf,OAAA,GAqDXzB,EAAYU,iBAAiB,YAAa,SAACL,GACvCF,EAAU,QAASE,EAAGN,KAI1BC,EAAYU,iBAAiB,aAAc,SAACL,GACxCF,EAAU,QAASE,EAAGN,KAG1BU,SAASC,iBAAiB,UAAW,WACjCU,EAASrB,KAGbU,SAASC,iBAAiB,WAAY,WAClCU,EAASrB,KAEhB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACtED,aAPA,IAAA,EAAA,EAAA,QAAA,gBAOA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GALA,IAAI2B,EAAiBjB,SAASkB,cAAc,cACxCC,EAAgBnB,SAASkB,cAAc,aACvCE,EAAkBpB,SAASkB,cAAc,eAE7C,EAAYD,EAAAA,SAAAA,EAAgBE,IAC5B,EAAYC,EAAAA,SAAAA","file":"src.067f5c06.map","sourceRoot":"../src","sourcesContent":["export default function dragAndDrop(moveElement, moveHandler) {\n    var layerX = 0, layerY = 0;\n\n    if (!moveHandler) {\n        moveHandler = moveElement;\n    }\n\n    moveElement.ondragstart = function() {\n        return false;\n    };\n\n    function startDrag (type, e, moveElement) {\n        moveElement.style.position = 'absolute';\n        \n        // говорим о том что moveElement перетаскивается\n        moveElement.draggable = true;\n    \n        // Добавляем обработчик на движение\n        if (type === 'click') {\n            // layerX,layerY - это позиция мыши относительно таргета (не окна браузера)\n            layerX = e.layerX;\n            layerY = e.layerY;\n            document.addEventListener('mousemove', setWindowPosition);\n        } else if (type === 'touch') {\n            layerX = parseInt((e.touches[0].clientX - e.target.parentNode.offsetLeft), 10);\n            layerY = parseInt((e.touches[0].clientY - e.target.parentNode.offsetTop), 10);\n            document.addEventListener('touchmove', setWindowPosition);\n        }\n    }\n\n    function stopDrag (moveElement) {\n        // выключаем перетаскивание\n        moveElement.draggable = false;\n        document.removeEventListener('mousemove', setWindowPosition);\n        document.removeEventListener('touchmove', setWindowPosition);\n    }\n    \n    function setWindowPosition(e) {\n        if (!moveElement.draggable) return;\n    \n        if (e.type === 'mousemove') {\n            // e.buttons - какие кнопки мыши нажаты - 1 это левая\n            // если нажата левая кнопка мыши и элемент перетаскивается\n            if (e.buttons === 1) {\n                // вычисляем стили для окна\n                // берем текущее положение мыши от окна браузера\n                // и отнимаем то расстояние от хеадера до мыши\n                // в итоге окно всегда будет иметь позицию относительно\n                // со смещением\n                moveElement.style.left = (e.clientX - layerX) + 'px';\n                moveElement.style.top = (e.clientY - layerY) + 'px';\n            }\n        } else if (e.type === 'touchmove') {\n            moveElement.style.left =\n                parseInt((e.touches[0].clientX - layerX), 10) + 'px';\n            moveElement.style.top =\n                parseInt((e.touches[0].clientY - layerY), 10) + 'px';\n        }\n    }\n\n    // Зажимаем мышь на заголовке\n    moveHandler.addEventListener('mousedown', (e) => {\n        startDrag('click', e, moveElement);\n    });\n\n    // Касаемся заголовка\n    moveHandler.addEventListener('touchstart', (e) => {\n        startDrag('touch', e, moveElement);\n    });\n\n    document.addEventListener('mouseup', () => {\n        stopDrag(moveElement);\n    });\n    \n    document.addEventListener('touchend', () => {\n        stopDrag(moveElement);\n    });\n}\n","import dragAndDrop from '../index.js';\n\nvar sectionElement = document.querySelector('.section_1');\nvar headerElement = document.querySelector('.header_1');\nvar sectionElement2 = document.querySelector('.section_2');\n\ndragAndDrop(sectionElement, headerElement);\ndragAndDrop(sectionElement2);"]}